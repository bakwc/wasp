 Wasp p2p backup

Требование - прямой ipv4

Логин, пароль.
Пароль - для шифрования файлов
На основе логин + пароль - генерация публичного и приватного ключа
хеш(публичного ключа) - уникальный идентификатор в сети.


каждый узел хранит информацию про N ближайших:
ip:port
зашифрованный список узлов, хранящих файлы данного узла

узел умеет получать запрос на поиск узла со свободным местом
если есть свободное место - связаться с ищущим узлом и обменятся файлами
если нет - переслать запрос следующему узлу

запрос на получение инфы кого-то узла:
(только от этого узла)

запрос на поиск узла с каким-то id




Список узлов с файлами:
hash_узла:номер_блока



    == Чистый старт ==

 - зачитать логин пароль, публичный ip, порт
 - сгенерить публичный / приватный ключ
 - подключится к одному из узлов сети
 - найти ближайший узел
 - получить у него список ближайших к ниму узлов
 - обновить свой список узлов контактами ближайших
 - получить у ближайших узлов информацию на хранение (список узлов на которых хранятся файлы)
 
    == Нормальный старт ==
    
 - зачитать список ближайших узлов.
 - послать всем уведомление что ты онлайн
 - для не ответивших узлов - найти их по dht
 - обновить информацию на хранение

 
 
    == Классы ==
    
 - Communicator - класс, отправляющий и принимающий сообщения
 - DHT - класс, отвечающий за подключение к dht сети и обработку dht запросов
 
 
 
 
    == PLAN ==
 DONE   1) получить работоспособную сеть без защиты, протестить на 1К узлах 
        2) добавить авторизацию, любой запрос от неизвестного узла откладывается до того, как этот узел не будет авторизован
        3) оптимизировать трафик
        4) протестить сеть, когда 50% узлов - вредоносные:
            - узлы возвращают пустые списки друзей
            - узлы возвращают большие списки друзей с невалидными адресами
